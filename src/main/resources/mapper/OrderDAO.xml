<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.edu.springboot.market.IOrderService">
	
	<!-- 결제 테이블에 결제 정보 추가 -->
	<insert id="orderProcess" parameterType="com.edu.springboot.market.OrderDTO">
		INSERT INTO marketorder (email, name, phone, addr1, addr2, message, payment_method, payment, point, zipcode)
			VALUES (#{email}, #{name}, #{phone}, #{addr1}, #{addr2}, #{message},
				#{payment_method}, ${payment}, ${point}, #{zipcode})
	</insert>
	
	<!-- orderDTO로 order_idx를 가져옵니다. -->
	<select id="getOrderIdx" parameterType="com.edu.springboot.market.OrderDTO" resultType="string">
		SELECT order_idx
		FROM marketorder
		WHERE email = #{email}
		ORDER BY order_idx DESC
			LIMIT 1
	</select>


	<!-- 결제 후, 장바구니에 담긴 모든 품목 제거 -->
	<delete id="updateAll" parameterType="com.edu.springboot.market.OrderDTO">
		UPDATE cart SET payed='true', order_idx=#{order_idx} WHERE email=#{email} AND payed='false'
	</delete>
	
	<!-- 나의 주문내역을 가져옵니다. -->
	<select id="getAllMyOrder" parameterType="string" resultType="com.edu.springboot.market.OrderDTO">
		SELECT * FROM marketorder WHERE email=#{email} ORDER BY order_idx DESC
	</select>
	
	<!-- 주문번호로 모든 상품들을 가져옵니다. -->
	<select id="getCartList" parameterType="string" resultType="com.edu.springboot.market.CartDTO">
		SELECT * FROM cart WHERE order_idx=#{order_idx}
	</select>
	
	<!-- 관리자 주문리스트 -->
	<select id="adminOrderSelect"
		resultType="com.edu.springboot.market.OrderDTO"> 
		SELECT * FROM marketorder ORDER BY order_idx DESC
	</select>
	<!-- 관리자 주문내역 불러오기 -->
	<select id="orderView"
		resultType="com.edu.springboot.market.OrderDTO"
		parameterType="com.edu.springboot.market.OrderDTO"> 
		SELECT * FROM marketorder WHERE order_idx=${idx}
	</select>
	<!-- 관리자 주문내역 상품 불러오기 -->
	<select id="orderViewList"
			resultType="com.edu.springboot.market.OrderDTO"
			parameterType="string">
		SELECT mo.order_idx, mo.email, mo.name, mo.phone, addr1, addr2, message, payment_method, payment, point,
			   payment_date, zipcode, cart_idx, pr.prod_idx, cr.prod_count, prod_totprice, pr.prod_name
		FROM marketorder mo
				 INNER JOIN cart cr ON mo.order_idx = cr.order_idx
				 INNER JOIN product pr ON cr.prod_idx = pr.prod_idx
		WHERE mo.order_idx = #{order_idx}
	</select>

	<!-- 관리자 주문취소처리변경 -->
	<update id="adminOrderDelete"
		parameterType="com.edu.springboot.market.OrderDTO">
		update marketorder set state='주문취소' where order_idx=#{idx}
	</update>
	<!-- 관리자 배송중처리변경 -->
	<update id="adminOrderPreUpdate"
		parameterType="com.edu.springboot.market.OrderDTO">
		update marketorder set state='delivery' where order_idx=#{idx}
	</update>
	<!-- 관리자 배송완료처리변경 -->
	<update id="adminOrderDeliUpdate"
		parameterType="com.edu.springboot.market.OrderDTO">
		update marketorder set state='success' where order_idx=#{idx}
	</update>
	
</mapper>
